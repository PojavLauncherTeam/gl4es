# This is a basic workflow to help you get started with Actions

name: Build for iOS

# Controls when the action will run. 
on: [push, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Build GL4ES
        run: |
          wget https://github.com/leetal/ios-cmake/raw/master/ios.toolchain.cmake
          mkdir build
          cd build
          cmake .. -G Xcode -DCMAKE_TOOLCHAIN_FILE=ios.toolchain.cmake -DNOX11=ON -DNOEGL=ON -DSTATICLIB=OFF -DPLATFORM=OS -DCMAKE_XCODE_ATTRIBUTE_DEVELOPMENT_TEAM=123456789A
          echo "--- Building ---"
          cmake --build . --config Release --target GL
          # xcrun -sdk iphoneos libtool -dynamic -arch_only arm64 -D -syslibroot /Applications/Xcode_12.2.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS14.2.sdk -L/Users/runner/work/gl4es/gl4es/lib/Release -filelist /Users/runner/work/gl4es/gl4es/build/src/gl4es.build/Release-iphoneos/GL.build/Objects-normal/arm64/GL.LinkFileList -dependency_info /Users/runner/work/gl4es/gl4es/build/src/gl4es.build/Release-iphoneos/GL.build/Objects-normal/arm64/GL_libtool_dependency_info.dat -o /Users/runner/work/gl4es/gl4es/build/Release/libGL.dylib
          # mkdir libGL
          # cd libGL
          # ar -x ../libGL.a
          # cd ..
          # libtool -dynamic libGL/*.o -o libgl4es.dylib -framework CoreFoundation -lSystem -lOpenGLES
          # rm -rf libGL

      - name: Upload lib
        uses: actions/upload-artifact@v2
        with:
          name: libGL
          path: lib/Release
          
